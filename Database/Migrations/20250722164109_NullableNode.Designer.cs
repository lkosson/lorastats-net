// <auto-generated />
using System;
using LoraStatsNet.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LoraStatsNet.Database.Migrations
{
    [DbContext(typeof(LoraStatsNetDb))]
    [Migration("20250722164109_NullableNode")]
    partial class NullableNode
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("LoraStatsNet.Database.Entities.Community", b =>
                {
                    b.Property<long>("Ref")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UrlName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Ref");

                    b.ToTable("Community", (string)null);
                });

            modelBuilder.Entity("LoraStatsNet.Database.Entities.CommunityArea", b =>
                {
                    b.Property<long>("Ref")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<long>("CommunityId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("LatitudeMax")
                        .HasColumnType("REAL");

                    b.Property<double>("LatitudeMin")
                        .HasColumnType("REAL");

                    b.Property<double>("LongitudeMax")
                        .HasColumnType("REAL");

                    b.Property<double>("LongitudeMin")
                        .HasColumnType("REAL");

                    b.HasKey("Ref");

                    b.HasIndex("CommunityId");

                    b.ToTable("CommunityArea", (string)null);
                });

            modelBuilder.Entity("LoraStatsNet.Database.Entities.Node", b =>
                {
                    b.Property<long>("Ref")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<long?>("CommunityId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("HwModel")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastBoot")
                        .HasColumnType("TEXT");

                    b.Property<double?>("LastElevation")
                        .HasColumnType("REAL");

                    b.Property<double?>("LastLatitude")
                        .HasColumnType("REAL");

                    b.Property<double?>("LastLongitude")
                        .HasColumnType("REAL");

                    b.Property<int?>("LastPositionPrecision")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastPositionUpdate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastSeen")
                        .HasColumnType("TEXT");

                    b.Property<string>("LongName")
                        .HasColumnType("TEXT");

                    b.Property<uint>("NodeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PublicKey")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ShortName")
                        .HasColumnType("TEXT");

                    b.HasKey("Ref");

                    b.HasIndex("CommunityId");

                    b.ToTable("Node", (string)null);
                });

            modelBuilder.Entity("LoraStatsNet.Database.Entities.Packet", b =>
                {
                    b.Property<long>("Ref")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<byte>("BitField")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Channel")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FirstSeen")
                        .HasColumnType("TEXT");

                    b.Property<long>("FromNodeId")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("HopStart")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("PacketId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ParsedPayload")
                        .HasColumnType("TEXT");

                    b.Property<int>("Port")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("RequestId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ToNodeId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("WantAck")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("WantResponse")
                        .HasColumnType("INTEGER");

                    b.HasKey("Ref");

                    b.HasIndex("FromNodeId");

                    b.HasIndex("ToNodeId");

                    b.ToTable("Packet", (string)null);
                });

            modelBuilder.Entity("LoraStatsNet.Database.Entities.PacketData", b =>
                {
                    b.Property<long>("Ref")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<long>("PacketReportId")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("RawData")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.HasKey("Ref");

                    b.HasIndex("PacketReportId")
                        .IsUnique();

                    b.ToTable("PacketData", (string)null);
                });

            modelBuilder.Entity("LoraStatsNet.Database.Entities.PacketReport", b =>
                {
                    b.Property<long>("Ref")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<long>("GatewayId")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("HopLimit")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("NextHop")
                        .HasColumnType("INTEGER");

                    b.Property<long>("PacketId")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("RSSI")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ReceptionTime")
                        .HasColumnType("TEXT");

                    b.Property<byte>("RelayNode")
                        .HasColumnType("INTEGER");

                    b.Property<float>("SNR")
                        .HasColumnType("REAL");

                    b.HasKey("Ref");

                    b.HasIndex("GatewayId");

                    b.HasIndex("PacketId");

                    b.ToTable("PacketReport", (string)null);
                });

            modelBuilder.Entity("LoraStatsNet.Database.Entities.CommunityArea", b =>
                {
                    b.HasOne("LoraStatsNet.Database.Entities.Community", "Community")
                        .WithMany("Areas")
                        .HasForeignKey("CommunityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Community");
                });

            modelBuilder.Entity("LoraStatsNet.Database.Entities.Node", b =>
                {
                    b.HasOne("LoraStatsNet.Database.Entities.Community", "Community")
                        .WithMany("Nodes")
                        .HasForeignKey("CommunityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Community");
                });

            modelBuilder.Entity("LoraStatsNet.Database.Entities.Packet", b =>
                {
                    b.HasOne("LoraStatsNet.Database.Entities.Node", "FromNode")
                        .WithMany("SentPackets")
                        .HasForeignKey("FromNodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoraStatsNet.Database.Entities.Node", "ToNode")
                        .WithMany()
                        .HasForeignKey("ToNodeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("FromNode");

                    b.Navigation("ToNode");
                });

            modelBuilder.Entity("LoraStatsNet.Database.Entities.PacketData", b =>
                {
                    b.HasOne("LoraStatsNet.Database.Entities.PacketReport", "PacketReport")
                        .WithOne("Data")
                        .HasForeignKey("LoraStatsNet.Database.Entities.PacketData", "PacketReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PacketReport");
                });

            modelBuilder.Entity("LoraStatsNet.Database.Entities.PacketReport", b =>
                {
                    b.HasOne("LoraStatsNet.Database.Entities.Node", "Gateway")
                        .WithMany("ReportedPackets")
                        .HasForeignKey("GatewayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoraStatsNet.Database.Entities.Packet", "Packet")
                        .WithMany("Reports")
                        .HasForeignKey("PacketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gateway");

                    b.Navigation("Packet");
                });

            modelBuilder.Entity("LoraStatsNet.Database.Entities.Community", b =>
                {
                    b.Navigation("Areas");

                    b.Navigation("Nodes");
                });

            modelBuilder.Entity("LoraStatsNet.Database.Entities.Node", b =>
                {
                    b.Navigation("ReportedPackets");

                    b.Navigation("SentPackets");
                });

            modelBuilder.Entity("LoraStatsNet.Database.Entities.Packet", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("LoraStatsNet.Database.Entities.PacketReport", b =>
                {
                    b.Navigation("Data")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
